import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import { useNavigate } from 'react-router-dom';
import { useToast } from '@/hooks/use-toast';

const Pricing = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  const [selectedPlan, setSelectedPlan] = useState<string | null>(null);

  const plans = [
    {
      id: 'free',
      name: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      price: 0,
      period: '',
      icon: 'üéÅ',
      features: [
        '1 –≤–∏–¥–µ–æ –≤ –¥–µ–Ω—å',
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ',
        '–ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏',
        '–í–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫'
      ],
      buttonText: '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å',
      popular: false
    },
    {
      id: 'basic',
      name: '–ë–∞–∑–æ–≤—ã–π',
      price: 299,
      period: '–º–µ—Å—è—Ü',
      icon: '‚≠ê',
      features: [
        '10 –≤–∏–¥–µ–æ –≤ –º–µ—Å—è—Ü',
        'HD –∫–∞—á–µ—Å—Ç–≤–æ',
        '–í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏',
        '–ë–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞',
        '–°–∫–∞—á–∏–≤–∞–Ω–∏–µ MP3'
      ],
      buttonText: '–ö—É–ø–∏—Ç—å',
      popular: true
    },
    {
      id: 'premium',
      name: '–ü—Ä–µ–º–∏—É–º',
      price: 699,
      period: '–º–µ—Å—è—Ü',
      icon: 'üëë',
      features: [
        '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –≤–∏–¥–µ–æ',
        '4K –∫–∞—á–µ—Å—Ç–≤–æ',
        '–í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è',
        '–°–∫–∞—á–∏–≤–∞–Ω–∏–µ MP3',
        '–ö–∞—Å—Ç–æ–º–Ω—ã–µ –≥–æ–ª–æ—Å–∞',
        '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7'
      ],
      buttonText: '–ö—É–ø–∏—Ç—å',
      popular: false
    }
  ];

  const handleSelectPlan = (planId: string) => {
    setSelectedPlan(planId);
    
    if (planId === 'free') {
      toast({
        title: 'üéâ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!',
        description: '–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—ë –ø–µ—Ä–≤–æ–µ –≤–∏–¥–µ–æ-–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ',
      });
      navigate('/');
      return;
    }

    toast({
      title: 'üí≥ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ',
      description: `–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ "${plans.find(p => p.id === planId)?.name}"`,
    });

    setTimeout(() => {
      toast({
        title: '‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞!',
        description: '–í–∞—à –ø–ª–∞–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!',
      });
      navigate('/');
    }, 2000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary/5 via-background to-secondary/5">
      <header className="sticky top-0 z-50 bg-primary/95 backdrop-blur text-primary-foreground shadow-lg">
        <nav className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <h1 className="text-2xl font-bold flex items-center gap-2 cursor-pointer" onClick={() => navigate('/')}>
              <span className="text-4xl">üéÑ</span>
              –ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –í–∏–¥–µ–æ
            </h1>
            <Button variant="secondary" onClick={() => navigate('/')}>
              <Icon name="ArrowLeft" className="mr-2" size={16} />
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Button>
          </div>
        </nav>
      </header>

      <main className="container mx-auto px-4 py-16">
        <div className="text-center mb-16 space-y-4">
          <h2 className="text-6xl font-bold text-primary">
            –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–ª–∞–Ω
          </h2>
          <p className="text-2xl text-muted-foreground max-w-2xl mx-auto">
            –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π
          </p>
        </div>

        <div className="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto">
          {plans.map((plan) => (
            <Card 
              key={plan.id}
              className={`relative overflow-hidden transition-all hover:scale-105 ${
                plan.popular ? 'border-4 border-primary shadow-2xl' : 'border-2'
              }`}
            >
              {plan.popular && (
                <div className="absolute top-0 right-0 bg-primary text-primary-foreground px-4 py-1 text-sm font-bold rounded-bl-lg">
                  –ü–û–ü–£–õ–Ø–†–ù–´–ô
                </div>
              )}
              
              <CardHeader className="text-center pb-8 pt-10">
                <div className="text-6xl mb-4">{plan.icon}</div>
                <CardTitle className="text-3xl mb-2">{plan.name}</CardTitle>
                <CardDescription className="text-xl">
                  {plan.price === 0 ? (
                    <span className="text-4xl font-bold text-primary">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                  ) : (
                    <>
                      <span className="text-5xl font-bold text-primary">{plan.price}‚ÇΩ</span>
                      <span className="text-muted-foreground">/{plan.period}</span>
                    </>
                  )}
                </CardDescription>
              </CardHeader>

              <CardContent className="space-y-6">
                <ul className="space-y-3">
                  {plan.features.map((feature, index) => (
                    <li key={index} className="flex items-start gap-3">
                      <Icon name="Check" className="text-primary shrink-0 mt-1" size={20} />
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>

                <Button
                  className="w-full text-lg py-6"
                  variant={plan.popular ? 'default' : 'outline'}
                  size="lg"
                  onClick={() => handleSelectPlan(plan.id)}
                  disabled={selectedPlan === plan.id}
                >
                  {selectedPlan === plan.id ? (
                    <>
                      <Icon name="Loader2" className="mr-2 animate-spin" size={20} />
                      –û–±—Ä–∞–±–æ—Ç–∫–∞...
                    </>
                  ) : (
                    plan.buttonText
                  )}
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        <div className="mt-20 max-w-4xl mx-auto">
          <Card className="bg-gradient-to-r from-primary/10 to-secondary/10">
            <CardHeader>
              <CardTitle className="text-3xl text-center">üí∞ –ì–∞—Ä–∞–Ω—Ç–∏–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</CardTitle>
            </CardHeader>
            <CardContent className="grid md:grid-cols-3 gap-6">
              <div className="text-center space-y-2">
                <div className="text-4xl mb-2">üîí</div>
                <h3 className="font-bold text-lg">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</h3>
                <p className="text-sm text-muted-foreground">–ó–∞—â–∏—â—ë–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π</p>
              </div>
              <div className="text-center space-y-2">
                <div className="text-4xl mb-2">‚Ü©Ô∏è</div>
                <h3 className="font-bold text-lg">–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤</h3>
                <p className="text-sm text-muted-foreground">14 –¥–Ω–µ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞</p>
              </div>
              <div className="text-center space-y-2">
                <div className="text-4xl mb-2">üí¨</div>
                <h3 className="font-bold text-lg">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
                <p className="text-sm text-muted-foreground">–ü–æ–º–æ—â—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è</p>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  );
};

export default Pricing;
